[{"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/index.js":"1","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/Post.js":"2","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/reportWebVitals.js":"3","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/comment.js":"4","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/modal.js":"5","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/AppMain.js":"6","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/MyPage.js":"7","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/Exercise.js":"8","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/highlight.js":"9","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/data/HightlightData.js":"10"},{"size":618,"mtime":1628406634668,"results":"11","hashOfConfig":"12"},{"size":7636,"mtime":1628320621703,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1625305639666,"results":"14","hashOfConfig":"12"},{"size":1577,"mtime":1628239606006,"results":"15","hashOfConfig":"12"},{"size":1281,"mtime":1628239633161,"results":"16","hashOfConfig":"12"},{"size":452,"mtime":1628319970899,"results":"17","hashOfConfig":"12"},{"size":1805,"mtime":1628411650907,"results":"18","hashOfConfig":"12"},{"size":500,"mtime":1628385352606,"results":"19","hashOfConfig":"12"},{"size":1349,"mtime":1628410483668,"results":"20","hashOfConfig":"12"},{"size":366,"mtime":1628410200148,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e4r1kb",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/index.js",["47","48"],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/Post.js",["49","50","51"],"/** @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport react, { useState } from \"react\";\n//image\nimport PostImg from \"../assets/images/image1.jpeg\";\nimport MyProfileImg from \"../assets/images/image1.jpeg\";\nimport CommentProfileImg from \"../assets/images/image1.jpeg\";\n\nimport Comment from \"../pages/components/comment\";\nimport Modal from \"../pages/components/modal\";\nimport { useHistory } from \"react-router-dom\";\n\n// Icons\nimport {\n  IoHeartOutline,\n  IoChatbubbleOutline,\n  IoPaperPlaneOutline,\n  IoBookmarkOutline,\n  IoHeartSharp,\n  IoEllipsisHorizontalSharp,\n} from \"react-icons/io5\";\nimport { AiOutlineSmile } from \"react-icons/ai\";\n\nconst Post = () => {\n  let history = useHistory();\n  const [day, setDay] = useState(4);\n  const [like, setLike] = useState(false);\n  const [likeNum, setLikeNum] = useState(0);\n  const [reply, setReply] = useState();\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const today = new Date();\n  const [month, date] = [today.getMonth() + 1, today.getDate()]; //배열 할당\n\n  const handleSubmit = (e) => {\n    setReply(e.target.value);\n  };\n  const moveToMyPage = (e) => {\n    history.push(\"/MyPage\");\n  };\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        justify-content: center;\n        padding-top: 100px;\n      `}\n    >\n      <div\n        css={css`\n          display: flex;\n          position: relative;\n          width: fit-content;\n          justify-content: center;\n        `}\n      >\n        <img\n          css={css`\n            width: 599px;\n            height: 654px;\n          `}\n          src={PostImg}\n        />\n\n        <div\n          css={css`\n            width: 33%;\n          `}\n        >\n          {/* 상단 프로필 부분 */}\n          <StyledProfileWrapper>\n            <div\n              css={css`\n                display: flex;\n              `}\n            >\n              <StyledProfile onClick={moveToMyPage} src={MyProfileImg} />\n              <div>\n                <StyledLink>youlakk</StyledLink>\n                <div>Chiang Mai, Thailand</div>\n              </div>\n            </div>\n            <IoEllipsisHorizontalSharp\n              onClick={() => {\n                setModalVisible(true);\n              }}\n            />\n          </StyledProfileWrapper>\n          {/* 프로필 하단 부분 */}\n          <div\n            css={css`\n              padding: 0 27px 11px 17px;\n              border-bottom: 1px solid rgb(142, 142, 142);\n            `}\n          >\n            <StyledWrapper>\n              <StyledProfile onClick={moveToMyPage} src={MyProfileImg} />\n              <div>\n                <StyledContentWrapper>\n                  <StyledLink href=\"#\">youlakk</StyledLink>\n                  <span>\n                    태국 파얍대학교 뒷골목에 있던 카페🌽 정말 행복해보인당💛💛💛\n                  </span>\n                </StyledContentWrapper>\n\n                <div\n                  css={css`\n                    margin-bottom: 20px;\n                  `}\n                >\n                  <StyledLink\n                    css={css`\n                      color: navy;\n                      font-weight: normal;\n                      display: inline-block;\n                    `}\n                    href=\"#\"\n                  >\n                    #고고팬츠3세대\n                  </StyledLink>\n                </div>\n                <StyledDate\n                  onClick={() => {\n                    setDay(day + 1);\n                  }}\n                >\n                  {day}일\n                </StyledDate>\n              </div>\n            </StyledWrapper>\n            <Comment\n              profileImg={CommentProfileImg}\n              userName={\"kwangya\"}\n              contents={\"광야로 가자...\"}\n              date={day}\n              setDay={setDay}\n            />\n            <Comment\n              profileImg={CommentProfileImg}\n              userName={\"suye0n0117\"}\n              contents={\"리액트 넘 재밌다....!\"}\n              date={day}\n              setDay={setDay}\n            />\n            <Comment\n              profileImg={CommentProfileImg}\n              userName={\"limsudal\"}\n              contents={\"안녕 나는 수안이야 ㅎㅎ\"}\n              date={day}\n              setDay={setDay}\n            />\n          </div>\n          <div\n            css={css`\n              padding: 15px 17px;\n              // background-color: yellowgreen;\n              border-bottom: 1px solid rgb(142, 142, 142);\n            `}\n          >\n            <div\n              css={css`\n                display: flex;\n                justify-content: space-between;\n              `}\n            >\n              <div>\n                {like ? (\n                  <IoHeartSharp\n                    onClick={() => {\n                      setLike(false);\n                      setLikeNum(likeNum - 1);\n                    }}\n                    css={IconStyle}\n                  />\n                ) : (\n                  <IoHeartOutline\n                    onClick={() => {\n                      setLike(true);\n                      setLikeNum(likeNum + 1);\n                    }}\n                    css={IconStyle}\n                  />\n                )}\n\n                <IoChatbubbleOutline css={IconStyle} />\n                <IoPaperPlaneOutline css={IconStyle} />\n              </div>\n              <div>\n                <IoBookmarkOutline css={IconStyle} />\n              </div>\n            </div>\n            <div\n              css={css`\n                font-weight: bold;\n                margin-top: 13px;\n                margin-bottom: 13px;\n              `}\n            >\n              좋아요 {likeNum}개\n            </div>\n            <StyledDate fontSize={10}>\n              {month}월 {date}일\n            </StyledDate>\n          </div>\n          <div\n            css={css`\n              padding: 17px 15px;\n              display: flex;\n              align-items: center;\n            `}\n          >\n            <AiOutlineSmile css={IconStyle} />\n            <StyledInput\n              type=\"text\"\n              value={reply}\n              placeholder=\"게시하기...\"\n              onChange={handleSubmit}\n            />\n            <StyledSubmitButton type=\"submit\" disabled={reply === \"\"}>\n              게시\n            </StyledSubmitButton>\n            {reply}\n          </div>\n        </div>\n        {isModalVisible && <Modal setModalVisible={setModalVisible} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n\nconst StyledProfileWrapper = styled.div`\n  display: flex;\n  padding: 21px 17px 15px 19px;\n  border-bottom: 1px solid rgb(142, 142, 142);\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst StyledProfile = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 70%;\n  margin-right: 17px;\n`;\nconst StyledDate = styled.div`\n  color: rgb(142, 142, 142);\n  font-size: ${(props) => props.fontSize || 16}px;\n`;\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  color: black;\n  margin-right: 7px;\n  font-weight: bold;\n`;\nconst StyledWrapper = styled.div`\n  display: flex;\n  margin-top: 24px;\n`;\nconst StyledContentWrapper = styled.div`\n  display: flex;\n  margin-bottom: 19px;\n  align-items: center;\n  display: inline;\n`;\nconst IconStyle = css`\n  width: 24px;\n  height: 24px;\n`;\nconst StyledInput = styled.input`\n  border: none;\n  margin-left: 17px;\n  width: 70%;\n  font-size: 20px;\n`;\n\nconst StyledSubmitButton = styled.button`\n  border: none;\n  background: white;\n  color: skyblue;\n  font-weight: bold;\n  font-size: 20px;\n`;\n",["52","53"],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/reportWebVitals.js",[],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/comment.js",["54","55","56"],"/** @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport react, { useState } from \"react\";\n// const Comment = (props) => {\nconst Comment = ({ profileImg, userName, contents, date, setDay }) => {\n  return (\n    <StyledWrapper>\n      <StyledProfile src={profileImg} />\n      <div>\n        <StyledContentWrapper>\n          <StyledLink href=\"#\">{userName}</StyledLink>\n          <span>{contents}</span>\n        </StyledContentWrapper>\n        <div\n          css={css`\n            display: flex;\n          `}\n        >\n          <StyledDate\n            onClick={() => {\n              setDay(date + 1);\n            }}\n          >\n            {date}일\n          </StyledDate>\n          <div\n            css={css`\n              cursor: pointer;\n              font-weight: bold;\n              color: rgb(142, 142, 142);\n              margin-left: 20px;\n            `}\n          >\n            답글 달기\n          </div>\n        </div>\n      </div>\n    </StyledWrapper>\n  );\n};\n\nexport default Comment;\n\nconst StyledProfile = styled.img`\n  width: 40px;\n  height: 40px;\n  border-radius: 70%;\n  margin-right: 17px;\n`;\nconst StyledDate = styled.div`\n  font-size: 16px;\n  color: rgb(142, 142, 142);\n`;\nconst StyledLink = styled.a`\n  text-decoration: none;\n  color: black;\n  margin-right: 7px;\n  font-weight: bold;\n`;\nconst StyledWrapper = styled.div`\n  display: flex;\n  margin-top: 24px;\n`;\nconst StyledContentWrapper = styled.div`\n  display: flex;\n  margin-bottom: 19px;\n  align-items: center;\n  display: inline;\n`;\n","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/modal.js",["57","58","59"],"/** @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport react, { useState } from \"react\";\n\nconst Modal = ({ setModalVisible }) => {\n  return (\n    <StyledModalWrapper>\n      <StyledModalButton\n        css={css`\n          font-weight: bold;\n          color: red;\n        `}\n      >\n        신고\n      </StyledModalButton>\n      <StyledModalButton>태그된 계정</StyledModalButton>\n      <StyledModalButton>공유 대상...</StyledModalButton>\n      <StyledModalButton>링크 복사</StyledModalButton>\n      <StyledModalButton>퍼가기</StyledModalButton>\n      <StyledModalButton\n        css={css`\n          border: none;\n        `}\n        onClick={() => {\n          setModalVisible(false);\n        }}\n      >\n        취소\n      </StyledModalButton>\n    </StyledModalWrapper>\n  );\n};\n\nexport default Modal;\n\nconst StyledModalWrapper = styled.div`\n  width: 400px;\n  border-radius: 13px;\n  height: fit-content;\n  border: 1px solid rgb(142, 142, 142);\n  position: absolute;\n  bottom: -450px;\n  left: 320px;\n  background-color: white;\n`;\n\nconst StyledModalButton = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding: 17px 0;\n  border-bottom: 1px solid rgb(142, 142, 142);\n`;\n","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/AppMain.js",["60"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Post from \"./pages/Post\";\nimport MyPage from \"./pages/MyPage\";\n\nconst AppMain = () => {\n  return (\n    //routing\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <MyPage />\n        </Route>\n        <Route path=\"/post\">\n          <Post />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\nexport default AppMain;\n","/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/MyPage.js",["61","62","63","64","65","66","67"],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/Exercise.js",["68","69","70","71","72"],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/components/highlight.js",["73","74","75","76"],"/Users/gimsuyeon/Documents/GitHub/REACT_tutoring/src/pages/data/HightlightData.js",[],{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"84","severity":1,"message":"85","line":59,"column":9,"nodeType":"86","endLine":65,"endColumn":11},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":25},{"ruleId":"77","severity":1,"message":"92","line":2,"column":50,"nodeType":"79","messageId":"80","endLine":2,"endColumn":54},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":25},{"ruleId":"77","severity":1,"message":"93","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":15},{"ruleId":"77","severity":1,"message":"94","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":25},{"ruleId":"77","severity":1,"message":"95","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"77","severity":1,"message":"96","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"97","line":2,"column":15,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"77","severity":1,"message":"98","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"91","line":4,"column":17,"nodeType":"79","messageId":"80","endLine":4,"endColumn":25},{"ruleId":"77","severity":1,"message":"99","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'Exercise' is defined but never used.","'jsx' is defined but never used.","'react' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'useState' is defined but never used.","'Link' is defined but never used.","'PostImg' is defined but never used.","'CommentProfileImg' is defined but never used.","'Comment' is defined but never used.","'Modal' is defined but never used.","'css' is defined but never used.","'styled' is defined but never used.","'StreakImg' is defined but never used.","no-global-assign","no-unsafe-negation"]